function_0:
    ldxdw r1, [r1+0x0]
    call 
    exit

entrypoint:
    mov64 r2, r1
    mov64 r1, r10
    add64 r1, -96
    call 
    ldxdw r7, [r10-0x48]
    ldxdw r8, [r10-0x58]
    ldxdw r1, [r10-0x38]
    mov64 r2, 8
    jgt r2, r1, lbb_91
    ldxdw r1, [r10-0x40]
    ldxw r2, [r1+0x0]
    stxw [r10-0xa8], r2
    ldxw r1, [r1+0x4]
    stxw [r10-0xa4], r1
    mov64 r1, 0
    stxdw [r10-0x40], r1
    lddw r1, 0x100004610 --> b"\x00\x00\x00\x00\xd0C\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00…
    stxdw [r10-0x60], r1
    mov64 r1, 2
    stxdw [r10-0x58], r1
    stxdw [r10-0x48], r1
    mov64 r1, r10
    add64 r1, -136
    stxdw [r10-0x50], r1
    mov64 r1, r10
    add64 r1, -164
    stxdw [r10-0x78], r1
    lddw r1, 0x100004210 --> b"\xbf#\x00\x00\x00\x00\x00\x00a\x11\x00\x00\x00\x00\x00\x00\xb7\x02\x00\x0…
    stxdw [r10-0x70], r1
    stxdw [r10-0x80], r1
    mov64 r1, r10
    add64 r1, -168
    stxdw [r10-0x88], r1
    mov64 r1, r10
    add64 r1, -160
    mov64 r2, r10
    add64 r2, -96
    call 
    ldxdw r1, [r10-0xa0]
    ldxdw r2, [r10-0x90]
    syscall [invalid]
    ldxw r1, [r10-0xa8]
    ldxw r2, [r10-0xa4]
    add64 r2, r1
    lsh64 r2, 32
    rsh64 r2, 32
    jne r2, 1337, lbb_58
    lddw r1, 0x1000043e0 --> b"You win!"
    mov64 r2, 8
    syscall [invalid]
    mov64 r1, 987654321
    ja lbb_63
lbb_58:
    lddw r1, 0x1000043e8 --> b"You lose!"
    mov64 r2, 9
    syscall [invalid]
    mov64 r1, 123456789
lbb_63:
    stxdw [r10-0x68], r1
    lddw r1, 0x100004630 --> b"\x00\x00\x00\x00\xd8C\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00…
    stxdw [r10-0x60], r1
    mov64 r1, 1
    stxdw [r10-0x58], r1
    stxdw [r10-0x48], r1
    mov64 r1, r10
    add64 r1, -160
    stxdw [r10-0x50], r1
    lddw r1, 0x100004238 --> b"\xbf#\x00\x00\x00\x00\x00\x00y\x11\x00\x00\x00\x00\x00\x00\xb7\x02\x00\x0…
    stxdw [r10-0x98], r1
    mov64 r1, r10
    add64 r1, -104
    stxdw [r10-0xa0], r1
    mov64 r6, 0
    stxdw [r10-0x40], r6
    mov64 r1, r10
    add64 r1, -136
    mov64 r2, r10
    add64 r2, -96
    call 
    ldxdw r1, [r10-0x88]
    ldxdw r2, [r10-0x78]
    syscall [invalid]
    jeq r7, 0, lbb_107
    ja lbb_102
lbb_91:
    lddw r1, 0x1000043f4 --> b"Not enough data. Need two u32 values."
    mov64 r2, 37
    syscall [invalid]
    mov64 r1, 2
    stxw [r10-0xc8], r1
    mov64 r1, r10
    add64 r1, -200
    call 
    mov64 r6, r0
    jeq r7, 0, lbb_107
lbb_102:
    add64 r8, 16
    ja lbb_109
lbb_104:
    add64 r8, 48
    add64 r7, -1
    jne r7, 0, lbb_109
lbb_107:
    mov64 r0, r6
    exit
lbb_109:
    ldxdw r1, [r8+0x0]
    ldxdw r2, [r8-0x8]
    ldxdw r3, [r2+0x0]
    add64 r3, -1
    stxdw [r2+0x0], r3
    jne r3, 0, lbb_118
    ldxdw r3, [r2+0x8]
    add64 r3, -1
    stxdw [r2+0x8], r3
lbb_118:
    ldxdw r2, [r1+0x0]
    add64 r2, -1
    stxdw [r1+0x0], r2
    jne r2, 0, lbb_104
    ldxdw r2, [r1+0x8]
    add64 r2, -1
    stxdw [r1+0x8], r2
    ja lbb_104

:
    lddw r3, 0x300000000
    ldxdw r3, [r3+0x0]
    lddw r4, 0x300008000
    jeq r3, 0, lbb_133
    mov64 r4, r3
lbb_133:
    mov64 r3, r4
    sub64 r3, r1
    mov64 r0, 0
    mov64 r5, 1
    jgt r3, r4, lbb_139
    mov64 r5, 0
lbb_139:
    mov64 r1, 0
    jne r5, 0, lbb_142
    mov64 r1, r3
lbb_142:
    neg64 r2
    and64 r1, r2
    lddw r2, 0x300000008
    jgt r2, r1, lbb_151
    lddw r2, 0x300000000
    stxdw [r2+0x0], r1
    mov64 r0, r1
lbb_151:
    exit

:
    exit

:
    mov64 r5, r2
    mov64 r2, r1
    lddw r1, 0x300000000
    ldxdw r1, [r1+0x0]
    lddw r6, 0x300008000
    jeq r1, 0, lbb_162
    mov64 r6, r1
lbb_162:
    mov64 r1, r6
    sub64 r1, r4
    mov64 r0, 0
    mov64 r7, 1
    jgt r1, r6, lbb_168
    mov64 r7, 0
lbb_168:
    mov64 r6, 0
    jne r7, 0, lbb_171
    mov64 r6, r1
lbb_171:
    neg64 r3
    and64 r6, r3
    lddw r1, 0x300000008
    jgt r1, r6, lbb_185
    lddw r1, 0x300000000
    stxdw [r1+0x0], r6
    jgt r4, r5, lbb_181
    mov64 r5, r4
lbb_181:
    mov64 r1, r6
    mov64 r3, r5
    call 
    mov64 r0, r6
lbb_185:
    exit

:
    stxdw [r10-0x90], r1
    mov64 r1, 0
    stxdw [r10-0x50], r1
    lddw r1, 0x100004640 --> b"\x00\x00\x00\x00\xd0C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00…
    stxdw [r10-0x70], r1
    mov64 r1, 1
    stxdw [r10-0x68], r1
    stxdw [r10-0x58], r1
    mov64 r1, r10
    add64 r1, -64
    stxdw [r10-0x60], r1
    lddw r1, 0x100000120 --> b"y\x11\x00\x00\x00\x00\x00\x00\x85\x10\x00\x00#\x04\x00\x00\x95\x00\x00\x0…
    stxdw [r10-0x38], r1
    mov64 r1, r10
    add64 r1, -144
    stxdw [r10-0x40], r1
    mov64 r1, r10
    add64 r1, -136
    mov64 r2, r10
    add64 r2, -112
    call 
    ldxdw r1, [r10-0x88]
    ldxdw r2, [r10-0x78]
    syscall [invalid]
    exit

:
    call 
    exit

:
    mov64 r7, r3
    mov64 r8, r2
    mov64 r6, r1
    jeq r8, 0, lbb_229
    ldxdw r1, [r4+0x8]
    jeq r1, 0, lbb_239
    ldxdw r2, [r4+0x10]
    jne r2, 0, lbb_233
    jeq r7, 0, lbb_249
    mov64 r1, r7
    mov64 r2, r8
    call 
    jeq r0, 0, lbb_245
    ja lbb_251
lbb_229:
    stxdw [r6+0x10], r7
    mov64 r1, 0
    stxdw [r6+0x8], r1
    ja lbb_247
lbb_233:
    ldxdw r1, [r4+0x0]
    mov64 r3, r8
    mov64 r4, r7
    call 
    jeq r0, 0, lbb_245
    ja lbb_251
lbb_239:
    jeq r7, 0, lbb_249
    mov64 r1, r7
    mov64 r2, r8
    call 
    jeq r0, 0, lbb_245
    ja lbb_251
lbb_245:
    stxdw [r6+0x10], r7
    stxdw [r6+0x8], r8
lbb_247:
    mov64 r1, 1
    ja lbb_254
lbb_249:
    mov64 r7, 0
    mov64 r0, r8
lbb_251:
    stxdw [r6+0x10], r7
    stxdw [r6+0x8], r0
    mov64 r1, 0
lbb_254:
    stxdw [r6+0x0], r1
    exit

:
    mov64 r6, r1
    add64 r2, 1
    mov64 r1, 1
    jeq r2, 0, lbb_261
    mov64 r1, 0
lbb_261:
    and64 r1, 1
    jne r1, 0, lbb_303
    ldxdw r1, [r6+0x8]
    mov64 r7, r1
    lsh64 r7, 1
    jgt r7, r2, lbb_268
    mov64 r7, r2
lbb_268:
    jgt r7, 4, lbb_270
    mov64 r7, 4
lbb_270:
    mov64 r2, 1
    lddw r3, 0x2aaaaaaaaaaaaab
    jgt r3, r7, lbb_275
    mov64 r2, 0
lbb_275:
    mov64 r3, r7
    mul64 r3, 48
    lsh64 r2, 3
    jne r1, 0, lbb_282
    mov64 r1, 0
    stxdw [r10-0x10], r1
    ja lbb_288
lbb_282:
    ldxdw r4, [r6+0x0]
    mul64 r1, 48
    stxdw [r10-0x8], r1
    mov64 r1, 8
    stxdw [r10-0x10], r1
    stxdw [r10-0x18], r4
lbb_288:
    mov64 r1, r10
    add64 r1, -48
    mov64 r4, r10
    add64 r4, -24
    call 
    ldxdw r1, [r10-0x28]
    ldxdw r2, [r10-0x30]
    jne r2, 0, lbb_299
    stxdw [r6+0x8], r7
    stxdw [r6+0x0], r1
lbb_298:
    exit
lbb_299:
    lddw r2, 0x8000000000000001
    jeq r1, r2, lbb_298
    jne r1, 0, lbb_305
lbb_303:
    call 
    syscall [invalid]
lbb_305:
    ldxdw r2, [r10-0x20]
    call 
    syscall [invalid]

:
    mov64 r4, r2
    stxdw [r10-0x68], r1
    ldxdw r6, [r4+0x0]
    jne r6, 0, lbb_336
    mov64 r1, 0
    stxdw [r10-0x10], r1
    stxdw [r10-0x18], r6
    mov64 r8, 8
    stxdw [r10-0x20], r8
lbb_317:
    mov64 r1, r4
    add64 r1, r8
    ldxdw r1, [r1+0x0]
    ldxdw r2, [r10-0x10]
    ldxdw r3, [r10-0x68]
    stxdw [r3+0x18], r2
    ldxdw r2, [r10-0x18]
    stxdw [r3+0x10], r2
    ldxdw r2, [r10-0x20]
    stxdw [r3+0x8], r2
    add64 r8, 8
    mov64 r2, r4
    add64 r2, r8
    stxdw [r3+0x20], r2
    stxdw [r3+0x28], r1
    add64 r1, r8
    add64 r4, r1
    stxdw [r3+0x0], r4
    exit
lbb_336:
    lddw r1, 0x2aaaaaaaaaaaaab
    jgt r1, r6, lbb_341
    call 
    syscall [invalid]
lbb_341:
    mov64 r7, r6
    mul64 r7, 48
    mov64 r8, 8
    mov64 r0, 8
    stxdw [r10-0x30], r4
    jeq r7, 0, lbb_356
    mov64 r1, r7
    mov64 r2, 8
    call 
    ldxdw r4, [r10-0x30]
    jne r0, 0, lbb_356
    mov64 r1, 8
    mov64 r2, r7
    call 
    syscall [invalid]
lbb_356:
    stxdw [r10-0x18], r6
    stxdw [r10-0x20], r0
    mov64 r1, 0
    stxdw [r10-0x10], r1
    mov64 r2, 0
    mov64 r3, 0
    stxdw [r10-0x60], r6
    ja lbb_393
lbb_364:
    mov64 r1, r2
    mul64 r1, 48
    mov64 r3, r0
    add64 r3, r1
    ldxdw r1, [r10-0x58]
    stxb [r3+0x2a], r1
    ldxdw r1, [r10-0x50]
    stxb [r3+0x29], r1
    ldxdw r1, [r10-0x48]
    stxb [r3+0x28], r1
    ldxdw r1, [r10-0x40]
    stxdw [r3+0x20], r1
    ldxdw r1, [r10-0x38]
    stxdw [r3+0x18], r1
    stxdw [r3+0x10], r9
    stxdw [r3+0x8], r6
    stxdw [r3+0x0], r7
    ldxw r1, [r10-0x5]
    stxw [r3+0x2b], r1
    ldxb r1, [r10-0x1]
    stxb [r3+0x2f], r1
lbb_385:
    add64 r2, 1
    stxdw [r10-0x10], r2
    ldxdw r3, [r10-0x28]
    add64 r3, 1
    add64 r8, 8
    ldxdw r1, [r10-0x60]
    jgt r1, r3, lbb_393
    ja lbb_317
lbb_393:
    mov64 r1, r4
    add64 r1, r8
    ldxb r1, [r1+0x0]
    stxdw [r10-0x28], r3
    jeq r1, 255, lbb_449
    jgt r2, r1, lbb_400
    ja lbb_550
lbb_400:
    mov64 r5, r2
    mul64 r1, 48
    mov64 r2, r0
    add64 r2, r1
    ldxdw r6, [r2+0x8]
    ldxdw r3, [r6+0x0]
    add64 r3, 1
    mov64 r4, 1
    jeq r3, 0, lbb_410
    mov64 r4, 0
lbb_410:
    ldxdw r7, [r2+0x0]
    stxdw [r6+0x0], r3
    jne r4, 1, lbb_415
lbb_413:
    syscall [invalid]
    syscall [invalid]
lbb_415:
    mov64 r2, r0
    add64 r2, r1
    ldxdw r9, [r2+0x10]
    ldxdw r2, [r9+0x0]
    add64 r2, 1
    mov64 r3, 1
    jeq r2, 0, lbb_423
    mov64 r3, 0
lbb_423:
    stxdw [r9+0x0], r2
    jne r3, 1, lbb_426
    ja lbb_413
lbb_426:
    mov64 r2, r0
    add64 r2, r1
    ldxb r1, [r2+0x2a]
    stxdw [r10-0x58], r1
    ldxb r1, [r2+0x29]
    stxdw [r10-0x50], r1
    ldxb r1, [r2+0x28]
    stxdw [r10-0x48], r1
    ldxdw r1, [r2+0x20]
    stxdw [r10-0x40], r1
    ldxdw r1, [r2+0x18]
    stxdw [r10-0x38], r1
    ldxdw r1, [r10-0x18]
    mov64 r2, r5
    ldxdw r4, [r10-0x30]
    jne r2, r1, lbb_364
    mov64 r1, r10
    add64 r1, -32
    call 
    ldxdw r4, [r10-0x30]
    ldxdw r0, [r10-0x20]
    ldxdw r2, [r10-0x10]
    ja lbb_364
lbb_449:
    stxdw [r10-0x38], r2
    mov64 r6, r8
    add64 r6, r4
    ldxb r1, [r6+0x3]
    stxdw [r10-0x50], r1
    ldxb r1, [r6+0x2]
    stxdw [r10-0x48], r1
    ldxb r1, [r6+0x1]
    stxdw [r10-0x40], r1
    mov64 r1, 32
    mov64 r2, 8
    call 
    jne r0, 0, lbb_466
    mov64 r1, 8
    mov64 r2, 32
    call 
    syscall [invalid]
lbb_466:
    mov64 r1, 0
    stxdw [r0+0x10], r1
    mov64 r1, 1
    stxdw [r0+0x8], r1
    stxdw [r0+0x0], r1
    mov64 r1, r6
    add64 r1, 72
    stxdw [r10-0x58], r0
    stxdw [r0+0x18], r1
    ldxdw r9, [r6+0x50]
    stxw [r6+0x4], r9
    mov64 r1, 40
    mov64 r2, 8
    call 
    mov64 r7, r0
    jne r7, 0, lbb_486
    mov64 r1, 8
    mov64 r2, 40
    call 
    syscall [invalid]
lbb_486:
    ldxdw r1, [r10-0x50]
    mov64 r3, r1
    mov64 r2, 0
    mov64 r1, 1
    mov64 r5, 1
    ldxdw r4, [r10-0x30]
    jne r3, 0, lbb_494
    mov64 r5, 0
lbb_494:
    ldxdw r3, [r10-0x48]
    stxdw [r7+0x10], r2
    mov64 r2, 1
    jne r3, 0, lbb_499
    mov64 r2, 0
lbb_499:
    stxdw [r10-0x48], r2
    ldxdw r2, [r10-0x40]
    mov64 r3, 1
    jne r2, 0, lbb_504
    mov64 r3, 0
lbb_504:
    stxdw [r10-0x40], r3
    mov64 r2, r6
    add64 r2, 40
    stxdw [r10-0x50], r2
    add64 r6, 8
    stxdw [r7+0x8], r1
    stxdw [r7+0x0], r1
    mov64 r1, r8
    add64 r1, r4
    add64 r1, 88
    stxdw [r7+0x18], r1
    stxdw [r7+0x20], r9
    add64 r8, r9
    add64 r8, 10335
    and64 r8, -8
    mov64 r1, r4
    add64 r1, r8
    ldxdw r9, [r1+0x0]
    ldxdw r1, [r10-0x18]
    ldxdw r2, [r10-0x38]
    jne r2, r1, lbb_532
    mov64 r1, r10
    add64 r1, -32
    stxdw [r10-0x38], r5
    call 
    ldxdw r5, [r10-0x38]
    ldxdw r4, [r10-0x30]
    ldxdw r2, [r10-0x10]
lbb_532:
    mov64 r1, r2
    mul64 r1, 48
    ldxdw r0, [r10-0x20]
    mov64 r3, r0
    add64 r3, r1
    stxb [r3+0x2a], r5
    ldxdw r1, [r10-0x48]
    stxb [r3+0x29], r1
    ldxdw r1, [r10-0x40]
    stxb [r3+0x28], r1
    stxdw [r3+0x20], r9
    ldxdw r1, [r10-0x50]
    stxdw [r3+0x18], r1
    stxdw [r3+0x10], r7
    ldxdw r1, [r10-0x58]
    stxdw [r3+0x8], r1
    stxdw [r3+0x0], r6
    ja lbb_385
lbb_550:
    lddw r3, 0x100004650 --> b"\x00\x00\x00\x00\x19D\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00a\x01\x00\x0…
    call 
    syscall [invalid]

:
    ldxw r2, [r1+0x0]
    jsgt r2, 11, lbb_565
    jsgt r2, 5, lbb_572
    jsgt r2, 2, lbb_584
    jeq r2, 0, lbb_604
    lddw r6, 0x200000000
    jeq r2, 1, lbb_651
    lddw r6, 0x300000000
    ja lbb_651
lbb_565:
    jsgt r2, 17, lbb_578
    jsgt r2, 14, lbb_589
    jeq r2, 12, lbb_610
    jeq r2, 13, lbb_613
    lddw r6, 0xf00000000
    ja lbb_651
lbb_572:
    jsgt r2, 8, lbb_594
    jeq r2, 6, lbb_616
    jeq r2, 7, lbb_619
    lddw r6, 0x900000000
    ja lbb_651
lbb_578:
    jsgt r2, 20, lbb_599
    jeq r2, 18, lbb_622
    jeq r2, 19, lbb_625
    lddw r6, 0x1500000000
    ja lbb_651
lbb_584:
    jeq r2, 3, lbb_628
    jeq r2, 4, lbb_631
    lddw r6, 0x600000000
    ja lbb_651
lbb_589:
    jeq r2, 15, lbb_634
    jeq r2, 16, lbb_637
    lddw r6, 0x1200000000
    ja lbb_651
lbb_594:
    jeq r2, 9, lbb_640
    jeq r2, 10, lbb_643
    lddw r6, 0xc00000000
    ja lbb_651
lbb_599:
    jeq r2, 21, lbb_646
    jeq r2, 22, lbb_649
    lddw r6, 0x1800000000
    ja lbb_651
lbb_604:
    lddw r6, 0x100000000
    ldxw r3, [r1+0x4]
    jeq r3, 0, lbb_651
    mov64 r6, r3
    ja lbb_651
lbb_610:
    lddw r6, 0xd00000000
    ja lbb_651
lbb_613:
    lddw r6, 0xe00000000
    ja lbb_651
lbb_616:
    lddw r6, 0x700000000
    ja lbb_651
lbb_619:
    lddw r6, 0x800000000
    ja lbb_651
lbb_622:
    lddw r6, 0x1300000000
    ja lbb_651
lbb_625:
    lddw r6, 0x1400000000
    ja lbb_651
lbb_628:
    lddw r6, 0x400000000
    ja lbb_651
lbb_631:
    lddw r6, 0x500000000
    ja lbb_651
lbb_634:
    lddw r6, 0x1000000000
    ja lbb_651
lbb_637:
    lddw r6, 0x1100000000
    ja lbb_651
lbb_640:
    lddw r6, 0xa00000000
    ja lbb_651
lbb_643:
    lddw r6, 0xb00000000
    ja lbb_651
lbb_646:
    lddw r6, 0x1600000000
    ja lbb_651
lbb_649:
    lddw r6, 0x1700000000
lbb_651:
    jne r2, 14, lbb_657
    ldxdw r2, [r1+0x10]
    jeq r2, 0, lbb_657
    ldxdw r1, [r1+0x8]
    mov64 r3, 1
    call 
lbb_657:
    mov64 r0, r6
    exit

:
    call 
    syscall [invalid]

:
    call 
    syscall [invalid]

:
    syscall [invalid]
    exit

:
    call 
    syscall [invalid]
    syscall [invalid]

:
    syscall [invalid]
    syscall [invalid]

:
    lddw r1, 0x10000442a --> b"Error: memory allocation failed, out of memory"
    mov64 r2, 46
    call 
    call 
    syscall [invalid]

:
    call 
    syscall [invalid]
    mov64 r3, r2
    lddw r2, 0x100004668 --> b"\x00\x00\x00\x00\x80\x16\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x08\x00\…
    call 
    exit

function_683:
    exit

function_684:
    ldxdw r2, [r1+0x8]
    jeq r2, 0, lbb_689
    ldxdw r1, [r1+0x0]
    mov64 r3, 1
    call 
lbb_689:
    exit

function_690:
    mov64 r1, r2
    lddw r2, 0x100004458 --> b"Error"
    mov64 r3, 5
    call 
    exit

:
    mov64 r6, r1
    mov64 r4, r2
    add64 r4, r3
    mov64 r1, 1
    jgt r2, r4, lbb_702
    mov64 r1, 0
lbb_702:
    and64 r1, 1
    jne r1, 0, lbb_739
    ldxdw r1, [r6+0x8]
    mov64 r7, r1
    lsh64 r7, 1
    jgt r7, r4, lbb_709
    mov64 r7, r4
lbb_709:
    jgt r7, 8, lbb_711
    mov64 r7, 8
lbb_711:
    mov64 r2, r7
    xor64 r2, -1
    rsh64 r2, 63
    jne r1, 0, lbb_718
    mov64 r1, 0
    stxdw [r10-0x10], r1
    ja lbb_723
lbb_718:
    ldxdw r3, [r6+0x0]
    stxdw [r10-0x8], r1
    mov64 r1, 1
    stxdw [r10-0x10], r1
    stxdw [r10-0x18], r3
lbb_723:
    mov64 r1, r10
    add64 r1, -48
    mov64 r4, r10
    add64 r4, -24
    mov64 r3, r7
    call 
    ldxdw r1, [r10-0x28]
    ldxdw r2, [r10-0x30]
    jne r2, 0, lbb_735
    stxdw [r6+0x8], r7
    stxdw [r6+0x0], r1
lbb_734:
    exit
lbb_735:
    lddw r2, 0x8000000000000001
    jeq r1, r2, lbb_734
    jne r1, 0, lbb_741
lbb_739:
    call 
    syscall [invalid]
lbb_741:
    ldxdw r2, [r10-0x20]
    call 
    syscall [invalid]

:
    mov64 r6, r1
    add64 r2, 1
    mov64 r1, 1
    jeq r2, 0, lbb_749
    mov64 r1, 0
lbb_749:
    and64 r1, 1
    jne r1, 0, lbb_786
    ldxdw r1, [r6+0x8]
    mov64 r7, r1
    lsh64 r7, 1
    jgt r7, r2, lbb_756
    mov64 r7, r2
lbb_756:
    jgt r7, 8, lbb_758
    mov64 r7, 8
lbb_758:
    mov64 r2, r7
    xor64 r2, -1
    rsh64 r2, 63
    jne r1, 0, lbb_765
    mov64 r1, 0
    stxdw [r10-0x10], r1
    ja lbb_770
lbb_765:
    ldxdw r3, [r6+0x0]
    stxdw [r10-0x8], r1
    mov64 r1, 1
    stxdw [r10-0x10], r1
    stxdw [r10-0x18], r3
lbb_770:
    mov64 r1, r10
    add64 r1, -48
    mov64 r4, r10
    add64 r4, -24
    mov64 r3, r7
    call 
    ldxdw r1, [r10-0x28]
    ldxdw r2, [r10-0x30]
    jne r2, 0, lbb_782
    stxdw [r6+0x8], r7
    stxdw [r6+0x0], r1
lbb_781:
    exit
lbb_782:
    lddw r2, 0x8000000000000001
    jeq r1, r2, lbb_781
    jne r1, 0, lbb_788
lbb_786:
    call 
    syscall [invalid]
lbb_788:
    ldxdw r2, [r10-0x20]
    call 
    syscall [invalid]

:
    mov64 r7, r3
    mov64 r6, r1
    jeq r2, 0, lbb_807
    ldxdw r1, [r4+0x8]
    jeq r1, 0, lbb_823
    ldxdw r2, [r4+0x10]
    jne r2, 0, lbb_812
    mov64 r1, 0
    mov64 r0, 1
    jeq r7, 0, lbb_831
    mov64 r1, r7
    mov64 r2, 1
    call 
    mov64 r1, r7
    jeq r0, 0, lbb_819
    ja lbb_831
lbb_807:
    stxdw [r6+0x10], r7
    mov64 r1, 0
    stxdw [r6+0x8], r1
    mov64 r1, 1
    ja lbb_834
lbb_812:
    ldxdw r1, [r4+0x0]
    mov64 r3, 1
    mov64 r4, r7
    call 
    mov64 r1, r7
    jeq r0, 0, lbb_819
    ja lbb_831
lbb_819:
    stxdw [r6+0x10], r7
    mov64 r1, 1
    stxdw [r6+0x8], r1
    ja lbb_834
lbb_823:
    mov64 r1, 0
    mov64 r0, 1
    jeq r7, 0, lbb_831
    mov64 r1, r7
    mov64 r2, 1
    call 
    mov64 r1, r7
    jeq r0, 0, lbb_819
lbb_831:
    stxdw [r6+0x10], r1
    stxdw [r6+0x8], r0
    mov64 r1, 0
lbb_834:
    stxdw [r6+0x0], r1
    exit

:
    mov64 r1, 1
    stxdw [r10-0x28], r1
    lddw r1, 0x100004698 --> b"\x00\x00\x00\x00yD\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0…
    stxdw [r10-0x30], r1
    mov64 r1, 0
    stxdw [r10-0x10], r1
    stxdw [r10-0x18], r1
    lddw r1, 0x100004458 --> b"Errorlibrary/alloc/src/raw_vec.rscapacity overflow"
    stxdw [r10-0x20], r1
    mov64 r1, r10
    add64 r1, -48
    lddw r2, 0x1000046a8 --> b"\x00\x00\x00\x00]D\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00!\x02\x00\x00\x…
    call 
    syscall [invalid]

:
    mov64 r3, r1
    mov64 r1, r2
    mov64 r2, r3
    call 
    syscall [invalid]

:
    mov64 r7, r2
    mov64 r6, r1
    ldxdw r2, [r7+0x8]
    jeq r2, 0, lbb_903
    ldxdw r1, [r7+0x0]
    mov64 r4, 0
    mov64 r3, r1
    add64 r3, 8
lbb_866:
    ldxdw r8, [r3+0x0]
    add64 r8, r4
    add64 r3, 16
    add64 r2, -1
    mov64 r4, r8
    jne r2, 0, lbb_866
    ldxdw r2, [r7+0x18]
    jeq r2, 0, lbb_888
    mov64 r4, 0
    mov64 r3, 1
    mov64 r5, 16
    mov64 r2, 1
    jgt r5, r8, lbb_880
    mov64 r2, 0
lbb_880:
    ldxdw r1, [r1+0x8]
    jeq r1, 0, lbb_883
    mov64 r3, 0
lbb_883:
    jsgt r4, r8, lbb_907
    and64 r2, r3
    and64 r2, 1
    jne r2, 0, lbb_907
lbb_887:
    lsh64 r8, 1
lbb_888:
    mov64 r0, 1
    mov64 r1, 0
    jeq r8, 0, lbb_909
    jsgt r8, -1, lbb_894
    call 
    syscall [invalid]
lbb_894:
    mov64 r1, r8
    mov64 r2, 1
    call 
    mov64 r1, r8
    jne r0, 0, lbb_909
    mov64 r1, 1
    mov64 r2, r8
    call 
    syscall [invalid]
lbb_903:
    mov64 r8, 0
    ldxdw r1, [r7+0x18]
    jeq r1, 0, lbb_907
    ja lbb_887
lbb_907:
    mov64 r0, 1
    mov64 r1, 0
lbb_909:
    mov64 r2, 0
    stxdw [r10-0x10], r2
    stxdw [r10-0x18], r1
    stxdw [r10-0x20], r0
    mov64 r1, r10
    add64 r1, -32
    lddw r2, 0x100004668 --> b"\x00\x00\x00\x00\x80\x16\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x08\x00\…
    mov64 r3, r7
    call 
    jne r0, 0, lbb_927
    ldxdw r1, [r10-0x10]
    stxdw [r6+0x10], r1
    ldxdw r1, [r10-0x18]
    stxdw [r6+0x8], r1
    ldxdw r1, [r10-0x20]
    stxdw [r6+0x0], r1
    exit
lbb_927:
    mov64 r3, r10
    add64 r3, -1
    lddw r1, 0x10000448a --> b"a formatting trait implementation returned an error"
    mov64 r2, 51
    lddw r4, 0x1000046c0 --> b"\x00\x00\x00\x00x\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00…
    lddw r5, 0x1000046e0 --> b"\x00\x00\x00\x00\xbdD\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00d\x02\x00\x0…
    call 
    syscall [invalid]

:
    mov64 r7, r2
    mov64 r6, r1
    mov64 r1, r7
    lsh64 r1, 32
    rsh64 r1, 32
    mov64 r2, 128
    jgt r2, r1, lbb_969
    mov64 r2, 0
    stxw [r10-0x4], r2
    mov64 r2, 2048
    jgt r2, r1, lbb_981
    mov64 r1, r7
    lsh64 r1, 32
    rsh64 r1, 32
    mov64 r2, 65536
    jgt r2, r1, lbb_955
    ja lbb_990
lbb_955:
    mov64 r1, r7
    and64 r1, 63
    or64 r1, 128
    stxb [r10-0x2], r1
    mov64 r1, r7
    rsh64 r1, 12
    or64 r1, 224
    stxb [r10-0x4], r1
    rsh64 r7, 6
    and64 r7, 63
    or64 r7, 128
    stxb [r10-0x3], r7
    mov64 r7, 3
    ja lbb_1009
lbb_969:
    ldxdw r2, [r6+0x10]
    ldxdw r1, [r6+0x8]
    jne r2, r1, lbb_975
    mov64 r1, r6
    call 
    ldxdw r2, [r6+0x10]
lbb_975:
    ldxdw r1, [r6+0x0]
    add64 r1, r2
    stxb [r1+0x0], r7
    add64 r2, 1
    stxdw [r6+0x10], r2
    ja lbb_1026
lbb_981:
    mov64 r1, r7
    and64 r1, 63
    or64 r1, 128
    stxb [r10-0x3], r1
    rsh64 r7, 6
    or64 r7, 192
    stxb [r10-0x4], r7
    mov64 r7, 2
    ja lbb_1009
lbb_990:
    mov64 r1, r7
    and64 r1, 63
    or64 r1, 128
    stxb [r10-0x1], r1
    mov64 r1, r7
    rsh64 r1, 6
    and64 r1, 63
    or64 r1, 128
    stxb [r10-0x2], r1
    mov64 r1, r7
    rsh64 r1, 12
    and64 r1, 63
    or64 r1, 128
    stxb [r10-0x3], r1
    rsh64 r7, 18
    and64 r7, 7
    or64 r7, 240
    stxb [r10-0x4], r7
    mov64 r7, 4
lbb_1009:
    ldxdw r8, [r6+0x10]
    ldxdw r1, [r6+0x8]
    sub64 r1, r8
    jge r1, r7, lbb_1018
    mov64 r1, r6
    mov64 r2, r8
    mov64 r3, r7
    call 
    ldxdw r8, [r6+0x10]
lbb_1018:
    ldxdw r1, [r6+0x0]
    add64 r1, r8
    mov64 r2, r10
    add64 r2, -4
    mov64 r3, r7
    call 
    add64 r8, r7
    stxdw [r6+0x10], r8
lbb_1026:
    exit

function_1027:
    mov64 r6, r3
    mov64 r8, r2
    mov64 r7, r1
    ldxdw r9, [r7+0x10]
    ldxdw r1, [r7+0x8]
    sub64 r1, r9
    jge r1, r6, lbb_1039
    mov64 r1, r7
    mov64 r2, r9
    mov64 r3, r6
    call 
    ldxdw r9, [r7+0x10]
lbb_1039:
    ldxdw r1, [r7+0x0]
    add64 r1, r9
    mov64 r2, r8
    mov64 r3, r6
    call 
    add64 r9, r6
    stxdw [r7+0x10], r9
    mov64 r0, 0
    exit

function_1048:
    call 
    mov64 r0, 0
    exit

function_1051:
    ldxdw r1, [r1+0x0]
lbb_1052:
    ja lbb_1052

function_1053:
    exit

function_1054:
    lddw r2, 0xbf0032581df6855a
    stxdw [r1+0x8], r2
    lddw r2, 0xf6c0e91a5cd6f8ca
    stxdw [r1+0x0], r2
    exit

:
    mov64 r8, r1
    ldxdw r6, [r2+0x20]
    ldxdw r7, [r2+0x28]
    ldxdw r9, [r7+0x18]
    mov64 r1, r6
    lddw r2, 0x100004520 --> b"panicked at "
    mov64 r3, 12
    callx r9
    mov64 r1, r0
    mov64 r0, 1
    jne r1, 0, lbb_1160
    ldxdw r1, [r8+0x18]
    mov64 r2, 0
    stxdw [r10-0x70], r2
    lddw r2, 0x100004708 --> b"\x00\x00\x00\x00\xd8D\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00…
    stxdw [r10-0x90], r2
    mov64 r2, 3
    stxdw [r10-0x88], r2
    stxdw [r10-0x78], r2
    mov64 r2, r10
    add64 r2, -96
    stxdw [r10-0x80], r2
    mov64 r2, r1
    add64 r2, 20
    stxdw [r10-0x40], r2
    lddw r2, 0x100004210 --> b"\xbf#\x00\x00\x00\x00\x00\x00a\x11\x00\x00\x00\x00\x00\x00\xb7\x02\x00\x0…
    stxdw [r10-0x38], r2
    stxdw [r10-0x48], r2
    mov64 r2, r1
    add64 r2, 16
    stxdw [r10-0x50], r2
    lddw r2, 0x100004290 --> b"\xbf$\x00\x00\x00\x00\x00\x00y\x13\x08\x00\x00\x00\x00\x00y\x12\x00\x00\x…
    stxdw [r10-0x58], r2
    stxdw [r10-0x60], r1
    mov64 r3, r10
    add64 r3, -144
    mov64 r1, r6
    mov64 r2, r7
    call 
    mov64 r1, r0
    mov64 r0, 1
    jne r1, 0, lbb_1160
    ldxdw r1, [r8+0x10]
    jeq r1, 0, lbb_1129
    stxdw [r10-0xa8], r1
    mov64 r1, r6
    lddw r2, 0x10000452c --> b":\x0a"
    mov64 r3, 2
    callx r9
    mov64 r1, r0
    mov64 r0, 1
    jne r1, 0, lbb_1160
    mov64 r8, r10
    add64 r8, -96
    mov64 r1, r8
    ldxdw r2, [r10-0xa8]
    mov64 r3, 48
    call 
    mov64 r1, r6
    mov64 r2, r7
    mov64 r3, r8
    call 
    ja lbb_1160
lbb_1129:
    ldxdw r7, [r8+0x0]
    ldxdw r1, [r8+0x8]
    ldxdw r3, [r1+0x18]
    mov64 r1, r10
    add64 r1, -160
    mov64 r2, r7
    callx r3
    lddw r1, 0xfdbc168100b1ef64
    ldxdw r2, [r10-0x98]
    xor64 r2, r1
    lddw r1, 0xc1a2c89ccd1e7bc1
    ldxdw r3, [r10-0xa0]
    xor64 r3, r1
    or64 r3, r2
    mov64 r0, 0
    jeq r3, 0, lbb_1148
    ja lbb_1160
lbb_1148:
    mov64 r1, r6
    lddw r2, 0x10000452c --> b":\x0a"
    mov64 r3, 2
    callx r9
    mov64 r1, r0
    mov64 r0, 1
    jne r1, 0, lbb_1160
    ldxdw r3, [r7+0x8]
    ldxdw r2, [r7+0x0]
    mov64 r1, r6
    callx r9
lbb_1160:
    exit

:
    mov64 r3, 1
    stxh [r10-0x8], r3
    stxdw [r10-0x10], r2
    stxdw [r10-0x18], r1
    lddw r1, 0x100004738 --> b"\x00\x00\x00\x00\x08"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00…
    stxdw [r10-0x20], r1
    lddw r1, 0x1000044d8 --> b"invalid argslibrary/core/src/fmt/mod.rsindex out o"
    stxdw [r10-0x28], r1
    mov64 r1, r10
    add64 r1, -40
    call 
    syscall [invalid]

:
    mov64 r6, r3
    stxdw [r10-0x58], r2
    stxdw [r10-0x60], r1
    mov64 r1, r10
    add64 r1, -96
    stxdw [r10-0x10], r1
    lddw r1, 0x100004238 --> b"\xbf#\x00\x00\x00\x00\x00\x00y\x11\x00\x00\x00\x00\x00\x00\xb7\x02\x00\x0…
    stxdw [r10-0x8], r1
    stxdw [r10-0x18], r1
    mov64 r1, r10
    add64 r1, -88
    stxdw [r10-0x20], r1
    mov64 r7, r10
    add64 r7, -80
    mov64 r4, r10
    add64 r4, -32
    mov64 r1, r7
    lddw r2, 0x100004758 --> b"\x00\x00"
    mov64 r3, 2
    mov64 r5, 2
    call 
    mov64 r1, r7
    mov64 r2, r6
    call 
    syscall [invalid]

:
    mov64 r6, r5
    stxdw [r10-0x68], r2
    stxdw [r10-0x70], r1
    stxdw [r10-0x58], r4
    stxdw [r10-0x60], r3
    lddw r1, 0x100004260 --> b"y\x13\x00\x00\x00\x00\x00\x00y\x11\x08\x00\x00\x00\x00\x00y\x14\x18\x00\x…
    stxdw [r10-0x8], r1
    mov64 r1, r10
    add64 r1, -96
    stxdw [r10-0x10], r1
    lddw r1, 0x100004290 --> b"\xbf$\x00\x00\x00\x00\x00\x00y\x13\x08\x00\x00\x00\x00\x00y\x12\x00\x00\x…
    stxdw [r10-0x18], r1
    mov64 r1, r10
    add64 r1, -112
    stxdw [r10-0x20], r1
    mov64 r7, r10
    add64 r7, -80
    mov64 r4, r10
    add64 r4, -32
    mov64 r1, r7
    lddw r2, 0x100004778 --> b"\x00\x00"
    mov64 r3, 2
    mov64 r5, 2
    call 
    mov64 r1, r7
    mov64 r2, r6
    call 
    syscall [invalid]

:
    mov64 r0, r5
    add64 r0, 1
    jgt r3, r0, lbb_1244
    jgt r5, r3, lbb_1244
    mov64 r0, 0
    stxdw [r1+0x20], r0
    stxdw [r1+0x8], r3
    stxdw [r1+0x0], r2
    stxdw [r1+0x18], r5
    stxdw [r1+0x10], r4
    exit
lbb_1244:
    mov64 r1, 1
    stxdw [r10-0x28], r1
    lddw r1, 0x1000046f8 --> b"\x00\x00\x00\x00\xd8D\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00…
    stxdw [r10-0x30], r1
    mov64 r1, 0
    stxdw [r10-0x10], r1
    stxdw [r10-0x18], r1
    lddw r1, 0x1000044d8 --> b"invalid argslibrary/core/src/fmt/mod.rsindex out o"
    stxdw [r10-0x20], r1
    mov64 r1, r10
    add64 r1, -48
    lddw r2, 0x100004798 --> b"\x00\x00\x00\x00\xe4D\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00M\x01\x00\x0…
    call 
    syscall [invalid]

:
    mov64 r4, 3
    stxb [r10-0x8], r4
    mov64 r4, 32
    stxdw [r10-0x10], r4
    stxdw [r10-0x18], r2
    stxdw [r10-0x20], r1
    mov64 r7, 0
    stxdw [r10-0x30], r7
    stxdw [r10-0x40], r7
    ldxdw r8, [r3+0x20]
    stxdw [r10-0x50], r3
    jne r8, 0, lbb_1302
    ldxdw r1, [r3+0x18]
    jeq r1, 0, lbb_1382
    ldxdw r2, [r10-0x50]
    ldxdw r6, [r2+0x10]
    lsh64 r1, 4
    mov64 r8, r6
    add64 r8, r1
    ldxdw r9, [r2+0x0]
    add64 r9, 8
    ja lbb_1299
lbb_1283:
    ldxdw r1, [r10-0x18]
    ldxdw r4, [r1+0x18]
    ldxdw r2, [r9-0x8]
    ldxdw r1, [r10-0x20]
    callx r4
    jne r0, 0, lbb_1399
lbb_1289:
    ldxdw r3, [r6+0x8]
    ldxdw r1, [r6+0x0]
    mov64 r2, r10
    add64 r2, -64
    callx r3
    jne r0, 0, lbb_1399
    add64 r7, 1
    add64 r9, 16
    add64 r6, 16
    jeq r6, r8, lbb_1382
lbb_1299:
    ldxdw r3, [r9+0x0]
    jeq r3, 0, lbb_1289
    ja lbb_1283
lbb_1302:
    ldxdw r9, [r3+0x28]
    jeq r9, 0, lbb_1382
    add64 r8, 24
    mul64 r9, 56
    ldxdw r1, [r10-0x50]
    ldxdw r2, [r1+0x10]
    stxdw [r10-0x48], r2
    ldxdw r6, [r1+0x0]
    add64 r6, 8
    ja lbb_1329
lbb_1312:
    stxdw [r10-0x28], r1
    stxdw [r10-0x30], r2
    ldxdw r1, [r8+0x8]
    lsh64 r1, 4
    ldxdw r2, [r10-0x48]
    add64 r2, r1
    ldxdw r3, [r2+0x8]
    ldxdw r1, [r2+0x0]
    mov64 r2, r10
    add64 r2, -64
    callx r3
    jne r0, 0, lbb_1399
    add64 r7, 1
    add64 r8, 56
    add64 r6, 16
    add64 r9, -56
    jeq r9, 0, lbb_1382
lbb_1329:
    ldxdw r3, [r6+0x0]
    jeq r3, 0, lbb_1337
    ldxdw r1, [r10-0x18]
    ldxdw r4, [r1+0x18]
    ldxdw r2, [r6-0x8]
    ldxdw r1, [r10-0x20]
    callx r4
    jne r0, 0, lbb_1399
lbb_1337:
    ldxw r1, [r8+0x10]
    stxw [r10-0x10], r1
    ldxb r1, [r8+0x18]
    stxb [r10-0x8], r1
    ldxw r1, [r8+0x14]
    stxw [r10-0xc], r1
    ldxdw r1, [r8+0x0]
    ldxdw r3, [r8-0x8]
    jeq r3, 0, lbb_1349
    mov64 r2, 0
    jeq r3, 1, lbb_1351
    ja lbb_1361
lbb_1349:
    mov64 r2, 1
    ja lbb_1361
lbb_1351:
    lsh64 r1, 4
    ldxdw r3, [r10-0x48]
    add64 r3, r1
    ldxdw r4, [r3+0x8]
    lddw r5, 0x1000021f8 --> b"y\x11\x00\x00\x00\x00\x00\x00\x05\x00\xff\xff\x00\x00\x00\x00\x95\x00\x00…
    jne r4, r5, lbb_1361
    mov64 r2, 1
    ldxdw r1, [r3+0x0]
    ldxdw r1, [r1+0x0]
lbb_1361:
    stxdw [r10-0x38], r1
    stxdw [r10-0x40], r2
    ldxdw r1, [r8-0x10]
    ldxdw r3, [r8-0x18]
    jeq r3, 0, lbb_1369
    mov64 r2, 0
    jeq r3, 1, lbb_1371
    ja lbb_1312
lbb_1369:
    mov64 r2, 1
    ja lbb_1312
lbb_1371:
    lsh64 r1, 4
    ldxdw r3, [r10-0x48]
    add64 r3, r1
    ldxdw r4, [r3+0x8]
    lddw r5, 0x1000021f8 --> b"y\x11\x00\x00\x00\x00\x00\x00\x05\x00\xff\xff\x00\x00\x00\x00\x95\x00\x00…
    jne r4, r5, lbb_1312
    mov64 r2, 1
    ldxdw r1, [r3+0x0]
    ldxdw r1, [r1+0x0]
    ja lbb_1312
lbb_1382:
    ldxdw r1, [r10-0x50]
    ldxdw r1, [r1+0x8]
    jgt r1, r7, lbb_1386
    ja lbb_1397
lbb_1386:
    lsh64 r7, 4
    ldxdw r1, [r10-0x50]
    ldxdw r1, [r1+0x0]
    add64 r1, r7
    ldxdw r3, [r1+0x8]
    ldxdw r2, [r1+0x0]
    ldxdw r1, [r10-0x18]
    ldxdw r4, [r1+0x18]
    ldxdw r1, [r10-0x20]
    callx r4
    jne r0, 0, lbb_1399
lbb_1397:
    mov64 r0, 0
    ja lbb_1400
lbb_1399:
    mov64 r0, 1
lbb_1400:
    exit

:
    mov64 r0, r4
    mov64 r8, r1
    ldxdw r9, [r5-0xff8]
    stxdw [r10-0x20], r9
    jne r2, 0, lbb_1411
    mov64 r1, 45
    stxdw [r10-0x18], r1
    ldxw r7, [r8+0x34]
    add64 r9, 1
    ja lbb_1417
lbb_1411:
    mov64 r1, 1114112
    stxdw [r10-0x18], r1
    ldxw r7, [r8+0x34]
    mov64 r1, r7
    and64 r1, 1
    jne r1, 0, lbb_1477
lbb_1417:
    ldxdw r1, [r5-0x1000]
    stxdw [r10-0x28], r1
    mov64 r4, 0
    mov64 r1, r7
    and64 r1, 4
    jeq r1, 0, lbb_1424
    ja lbb_1451
lbb_1424:
    ldxdw r1, [r8+0x0]
    jne r1, 0, lbb_1436
    ldxdw r9, [r8+0x28]
    ldxdw r6, [r8+0x20]
    mov64 r1, r6
    mov64 r2, r9
    ldxdw r3, [r10-0x18]
    mov64 r5, r0
    call 
    mov64 r7, 1
    jne r0, 0, lbb_1474
    ja lbb_1468
lbb_1436:
    ldxdw r6, [r8+0x8]
    jgt r6, r9, lbb_1439
    ja lbb_1459
lbb_1439:
    and64 r7, 8
    jeq r7, 0, lbb_1442
    ja lbb_1505
lbb_1442:
    sub64 r6, r9
    ldxb r9, [r8+0x38]
    stxdw [r10-0x30], r0
    stxdw [r10-0x38], r4
    jsgt r9, 1, lbb_1532
    jeq r9, 0, lbb_1551
lbb_1448:
    mov64 r9, r6
    mov64 r6, 0
    ja lbb_1551
lbb_1451:
    mov64 r1, 32
    stxdw [r10-0x8], r3
    jgt r1, r0, lbb_1482
    mov64 r1, r3
    mov64 r6, r0
    mov64 r2, r0
    call 
    ja lbb_1493
lbb_1459:
    ldxdw r9, [r8+0x28]
    ldxdw r6, [r8+0x20]
    mov64 r1, r6
    mov64 r2, r9
    ldxdw r3, [r10-0x18]
    mov64 r5, r0
    call 
    mov64 r7, 1
    jne r0, 0, lbb_1474
lbb_1468:
    ldxdw r4, [r9+0x18]
    mov64 r1, r6
    ldxdw r2, [r10-0x28]
    ldxdw r3, [r10-0x20]
    callx r4
    mov64 r7, r0
lbb_1474:
    and64 r7, 1
    mov64 r0, r7
    exit
lbb_1477:
    mov64 r1, 43
    stxdw [r10-0x18], r1
    ldxdw r9, [r10-0x20]
    add64 r9, 1
    ja lbb_1417
lbb_1482:
    mov64 r1, r0
    mov64 r0, 0
    mov64 r6, r1
    jeq r1, 0, lbb_1493
    ldxdw r1, [r10-0x8]
    mov64 r2, r6
    ja lbb_1498
lbb_1489:
    add64 r0, r3
    add64 r1, 1
    add64 r2, -1
    jne r2, 0, lbb_1498
lbb_1493:
    add64 r0, r9
    ldxdw r4, [r10-0x8]
    mov64 r9, r0
    mov64 r0, r6
    ja lbb_1424
lbb_1498:
    ldxb r4, [r1+0x0]
    lsh64 r4, 56
    arsh64 r4, 56
    mov64 r3, 1
    jsgt r4, -65, lbb_1489
    mov64 r3, 0
    ja lbb_1489
lbb_1505:
    ldxw r1, [r8+0x30]
    stxdw [r10-0x40], r1
    mov64 r1, 48
    stxw [r8+0x30], r1
    ldxb r1, [r8+0x38]
    stxdw [r10-0x48], r1
    mov64 r7, 1
    stxb [r8+0x38], r7
    ldxdw r1, [r8+0x20]
    ldxdw r2, [r8+0x28]
    stxdw [r10-0x8], r1
    stxdw [r10-0x10], r2
    ldxdw r3, [r10-0x18]
    mov64 r5, r0
    call 
    jne r0, 0, lbb_1474
    sub64 r6, r9
    add64 r6, 1
lbb_1523:
    add64 r6, -1
    jeq r6, 0, lbb_1534
    ldxdw r1, [r10-0x10]
    ldxdw r3, [r1+0x20]
    ldxdw r1, [r10-0x8]
    mov64 r2, 48
    callx r3
    jne r0, 0, lbb_1474
    ja lbb_1523
lbb_1532:
    jeq r9, 2, lbb_1547
    ja lbb_1448
lbb_1534:
    ldxdw r1, [r10-0x10]
    ldxdw r4, [r1+0x18]
    ldxdw r1, [r10-0x8]
    ldxdw r2, [r10-0x28]
    ldxdw r3, [r10-0x20]
    callx r4
    jne r0, 0, lbb_1474
    ldxdw r1, [r10-0x48]
    stxb [r8+0x38], r1
    ldxdw r1, [r10-0x40]
    stxw [r8+0x30], r1
    mov64 r7, 0
    ja lbb_1474
lbb_1547:
    mov64 r9, r6
    rsh64 r9, 1
    add64 r6, 1
    rsh64 r6, 1
lbb_1551:
    add64 r9, 1
    ldxw r1, [r8+0x30]
    stxdw [r10-0x10], r1
    ldxdw r1, [r8+0x28]
    stxdw [r10-0x8], r1
    ldxdw r8, [r8+0x20]
    mov64 r7, 1
lbb_1558:
    add64 r9, -1
    jeq r9, 0, lbb_1567
    ldxdw r1, [r10-0x8]
    ldxdw r3, [r1+0x20]
    mov64 r1, r8
    ldxdw r2, [r10-0x10]
    callx r3
    jne r0, 0, lbb_1474
    ja lbb_1558
lbb_1567:
    mov64 r1, r8
    ldxdw r2, [r10-0x8]
    ldxdw r3, [r10-0x18]
    ldxdw r4, [r10-0x38]
    ldxdw r5, [r10-0x30]
    call 
    mov64 r7, 1
    jne r0, 0, lbb_1474
    ldxdw r1, [r10-0x8]
    ldxdw r4, [r1+0x18]
    mov64 r1, r8
    ldxdw r2, [r10-0x28]
    ldxdw r3, [r10-0x20]
    callx r4
    jne r0, 0, lbb_1474
    mov64 r7, 0
lbb_1583:
    mov64 r1, r6
    jeq r6, r7, lbb_1594
    ldxdw r1, [r10-0x8]
    ldxdw r3, [r1+0x20]
    mov64 r1, r8
    ldxdw r2, [r10-0x10]
    callx r3
    add64 r7, 1
    jeq r0, 0, lbb_1583
    add64 r7, -1
    mov64 r1, r7
lbb_1594:
    mov64 r7, 1
    jgt r6, r1, lbb_1474
    mov64 r7, 0
    ja lbb_1474

:
    mov64 r6, r5
    mov64 r7, r4
    mov64 r9, r2
    mov64 r8, r1
    mov64 r1, r3
    lsh64 r1, 32
    rsh64 r1, 32
    jeq r1, 1114112, lbb_1613
    ldxdw r4, [r9+0x20]
    mov64 r1, r8
    mov64 r2, r3
    callx r4
    mov64 r1, r0
    mov64 r0, 1
    jne r1, 0, lbb_1615
lbb_1613:
    mov64 r0, 0
    jne r7, 0, lbb_1616
lbb_1615:
    exit
lbb_1616:
    ldxdw r4, [r9+0x18]
    mov64 r1, r8
    mov64 r2, r7
    mov64 r3, r6
    callx r4
    ja lbb_1615

:
    mov64 r8, r1
    ldxdw r5, [r8+0x10]
    ldxdw r1, [r8+0x0]
    mov64 r4, r1
    or64 r4, r5
    jeq r4, 0, lbb_1679
    stxdw [r10-0x8], r2
    stxdw [r10-0x10], r3
    jeq r5, 0, lbb_1699
    ldxdw r7, [r10-0x8]
    mov64 r3, r7
    ldxdw r2, [r10-0x10]
    add64 r3, r2
    mov64 r2, 0
    ldxdw r4, [r8+0x18]
    jeq r4, 0, lbb_1664
    mov64 r6, 0
    ldxdw r7, [r10-0x8]
lbb_1640:
    mov64 r9, r7
    jeq r9, r3, lbb_1699
    mov64 r7, r9
    add64 r7, 1
    ldxb r5, [r9+0x0]
    mov64 r0, r5
    lsh64 r0, 56
    arsh64 r0, 56
    jsgt r0, -1, lbb_1660
    mov64 r7, r9
    add64 r7, 2
    mov64 r0, r5
    mov64 r5, 224
    jgt r5, r0, lbb_1660
    mov64 r7, r9
    add64 r7, 3
    mov64 r5, 240
    jgt r5, r0, lbb_1660
    mov64 r7, r9
    add64 r7, 4
lbb_1660:
    add64 r6, 1
    sub64 r2, r9
    add64 r2, r7
    jgt r4, r6, lbb_1640
lbb_1664:
    jeq r7, r3, lbb_1699
    ldxb r3, [r7+0x0]
    mov64 r4, r3
    lsh64 r4, 56
    arsh64 r4, 56
    jsgt r4, -1, lbb_1672
    mov64 r4, 224
    jgt r4, r3, lbb_1672
lbb_1672:
    ldxdw r0, [r10-0x10]
    ldxdw r6, [r10-0x8]
    jeq r2, 0, lbb_1692
    jgt r0, r2, lbb_1684
    mov64 r3, 0
    jeq r2, r0, lbb_1692
    ja lbb_1693
lbb_1679:
    ldxdw r1, [r8+0x20]
    ldxdw r4, [r8+0x28]
    ldxdw r4, [r4+0x18]
    callx r4
    ja lbb_1793
lbb_1684:
    mov64 r4, r6
    add64 r4, r2
    mov64 r3, 0
    ldxb r4, [r4+0x0]
    lsh64 r4, 56
    arsh64 r4, 56
    mov64 r5, -64
    jsgt r5, r4, lbb_1693
lbb_1692:
    mov64 r3, r6
lbb_1693:
    jeq r3, 0, lbb_1695
    mov64 r0, r2
lbb_1695:
    stxdw [r10-0x10], r0
    jeq r3, 0, lbb_1698
    mov64 r6, r3
lbb_1698:
    stxdw [r10-0x8], r6
lbb_1699:
    jne r1, 0, lbb_1707
    ldxdw r1, [r8+0x20]
    ldxdw r2, [r8+0x28]
    ldxdw r4, [r2+0x18]
    ldxdw r2, [r10-0x8]
    ldxdw r3, [r10-0x10]
    callx r4
    ja lbb_1793
lbb_1707:
    ldxdw r9, [r8+0x8]
    mov64 r1, 32
    ldxdw r6, [r10-0x10]
    ldxdw r7, [r10-0x8]
    jgt r1, r6, lbb_1716
    mov64 r1, r7
    mov64 r2, r6
    call 
    ja lbb_1725
lbb_1716:
    mov64 r0, 0
    jeq r6, 0, lbb_1725
    mov64 r1, r7
    mov64 r2, r6
    ja lbb_1734
lbb_1721:
    add64 r0, r3
    add64 r1, 1
    add64 r2, -1
    jne r2, 0, lbb_1734
lbb_1725:
    jge r0, r9, lbb_1741
    sub64 r9, r0
    mov64 r6, 0
    ldxb r1, [r8+0x38]
    jsgt r1, 1, lbb_1748
    jeq r1, 0, lbb_1754
    mov64 r6, r9
    mov64 r9, 0
    ja lbb_1754
lbb_1734:
    ldxb r4, [r1+0x0]
    lsh64 r4, 56
    arsh64 r4, 56
    mov64 r3, 1
    jsgt r4, -65, lbb_1721
    mov64 r3, 0
    ja lbb_1721
lbb_1741:
    ldxdw r1, [r8+0x20]
    ldxdw r2, [r8+0x28]
    ldxdw r4, [r2+0x18]
    mov64 r2, r7
    mov64 r3, r6
    callx r4
    ja lbb_1793
lbb_1748:
    jeq r1, 2, lbb_1750
    ja lbb_1754
lbb_1750:
    mov64 r6, r9
    rsh64 r6, 1
    add64 r9, 1
    rsh64 r9, 1
lbb_1754:
    stxdw [r10-0x18], r9
    add64 r6, 1
    ldxw r9, [r8+0x30]
    ldxdw r7, [r8+0x28]
    ldxdw r8, [r8+0x20]
lbb_1759:
    add64 r6, -1
    jeq r6, 0, lbb_1769
    ldxdw r3, [r7+0x20]
    mov64 r1, r8
    mov64 r2, r9
    callx r3
    mov64 r1, r0
    mov64 r0, 1
    jne r1, 0, lbb_1793
    ja lbb_1759
lbb_1769:
    ldxdw r4, [r7+0x18]
    mov64 r1, r8
    ldxdw r2, [r10-0x8]
    ldxdw r3, [r10-0x10]
    callx r4
    mov64 r1, r0
    mov64 r0, 1
    jne r1, 0, lbb_1793
    mov64 r6, 0
lbb_1778:
    ldxdw r2, [r10-0x18]
    mov64 r1, r2
    jeq r2, r6, lbb_1789
    ldxdw r3, [r7+0x20]
    mov64 r1, r8
    mov64 r2, r9
    callx r3
    add64 r6, 1
    jeq r0, 0, lbb_1778
    add64 r6, -1
    mov64 r1, r6
lbb_1789:
    mov64 r0, 1
    ldxdw r2, [r10-0x18]
    jgt r2, r1, lbb_1793
    mov64 r0, 0
lbb_1793:
    and64 r0, 1
    exit

:
    ldxdw r4, [r1+0x20]
    ldxdw r1, [r1+0x28]
    ldxdw r5, [r1+0x18]
    mov64 r1, r4
    callx r5
    exit

:
    mov64 r7, r1
    add64 r7, 7
    and64 r7, -8
    mov64 r4, r7
    sub64 r4, r1
    jgt r4, r2, lbb_1945
    mov64 r5, r2
    sub64 r5, r4
    mov64 r3, 8
    jgt r3, r5, lbb_1945
    stxdw [r10-0x8], r4
    mov64 r2, r5
    and64 r2, 7
    mov64 r0, 0
    mov64 r3, 0
    jeq r7, r1, lbb_1824
    mov64 r6, r1
    sub64 r6, r7
    mov64 r7, r1
    ja lbb_1833
lbb_1821:
    add64 r3, r9
    add64 r7, 1
    jne r8, 1, lbb_1833
lbb_1824:
    ldxdw r4, [r10-0x8]
    add64 r1, r4
    jeq r2, 0, lbb_1848
    mov64 r0, r5
    and64 r0, -8
    mov64 r4, r1
    add64 r4, r0
    mov64 r0, 0
    ja lbb_1853
lbb_1833:
    ldxb r4, [r7+0x0]
    lsh64 r4, 56
    arsh64 r4, 56
    mov64 r8, 1
    mov64 r9, 1
    jsgt r4, -65, lbb_1840
    mov64 r9, 0
lbb_1840:
    add64 r6, 1
    jeq r6, 0, lbb_1821
    mov64 r8, 0
    ja lbb_1821
lbb_1844:
    add64 r0, r6
    add64 r4, 1
    add64 r2, -1
    jne r2, 0, lbb_1853
lbb_1848:
    rsh64 r5, 3
    add64 r0, r3
    lddw r6, 0x101010101010101
    ja lbb_1926
lbb_1853:
    ldxb r7, [r4+0x0]
    lsh64 r7, 56
    arsh64 r7, 56
    mov64 r6, 1
    jsgt r7, -65, lbb_1844
    mov64 r6, 0
    ja lbb_1844
lbb_1860:
    ldxdw r8, [r2+0x0]
    mov64 r7, r8
    rsh64 r7, 6
    xor64 r8, -1
    rsh64 r8, 7
    or64 r8, r7
    and64 r8, r6
    add64 r8, r4
    ldxdw r4, [r2+0x8]
    mov64 r7, r4
    rsh64 r7, 6
    xor64 r4, -1
    rsh64 r4, 7
    or64 r4, r7
    and64 r4, r6
    add64 r4, r8
    ldxdw r8, [r2+0x10]
    mov64 r7, r8
    rsh64 r7, 6
    xor64 r8, -1
    rsh64 r8, 7
    or64 r8, r7
    and64 r8, r6
    add64 r8, r4
    ldxdw r4, [r2+0x18]
    mov64 r7, r4
    rsh64 r7, 6
    xor64 r4, -1
    rsh64 r4, 7
    or64 r4, r7
    and64 r4, r6
    add64 r4, r8
    add64 r2, 32
    jne r2, r1, lbb_1860
lbb_1894:
    mov64 r1, r9
    add64 r1, r5
    ldxdw r8, [r10-0x8]
    mov64 r2, r8
    and64 r2, 3
    mov64 r5, r3
    sub64 r5, r8
    mov64 r7, r4
    stxdw [r10-0x10], r9
    mov64 r9, r3
    lddw r3, 0xff00ff00ff00ff
    and64 r7, r3
    rsh64 r4, 8
    and64 r4, r3
    add64 r4, r7
    lddw r7, 0x1000100010001
    mul64 r4, r7
    rsh64 r4, 48
    add64 r4, r0
    mov64 r0, r4
    jeq r2, 0, lbb_1926
    mov64 r0, 0
    ldxdw r6, [r10-0x10]
    jeq r2, 0, lbb_1977
    and64 r8, 252
    lsh64 r8, 3
    mov64 r1, 192
    jgt r1, r9, lbb_1958
    mov64 r9, 192
    ja lbb_1958
lbb_1926:
    mov64 r3, r5
    mov64 r9, r1
    jeq r3, 0, lbb_1989
    mov64 r1, 192
    mov64 r2, r3
    jgt r1, r3, lbb_1933
    mov64 r2, 192
lbb_1933:
    mov64 r5, r2
    lsh64 r5, 3
    mov64 r4, 0
    mov64 r1, 4
    stxdw [r10-0x8], r2
    jgt r1, r2, lbb_1894
    mov64 r2, r5
    and64 r2, 2016
    mov64 r1, r9
    add64 r1, r2
    mov64 r2, r9
    ja lbb_1860
lbb_1945:
    mov64 r0, 0
    jeq r2, 0, lbb_1989
lbb_1947:
    ldxb r4, [r1+0x0]
    lsh64 r4, 56
    arsh64 r4, 56
    mov64 r3, 1
    jsgt r4, -65, lbb_1953
    mov64 r3, 0
lbb_1953:
    add64 r0, r3
    add64 r1, 1
    add64 r2, -1
    jeq r2, 0, lbb_1989
    ja lbb_1947
lbb_1958:
    add64 r6, r8
    mov64 r2, 0
    and64 r9, 3
    lsh64 r9, 3
    lddw r1, 0x101010101010101
lbb_1964:
    ldxdw r0, [r6+0x0]
    mov64 r5, r0
    rsh64 r5, 6
    xor64 r0, -1
    rsh64 r0, 7
    or64 r0, r5
    and64 r0, r1
    add64 r0, r2
    add64 r6, 8
    add64 r9, -8
    mov64 r2, r0
    jeq r9, 0, lbb_1977
    ja lbb_1964
lbb_1977:
    lddw r1, 0xff00ff00ff00ff
    mov64 r2, r0
    and64 r2, r1
    rsh64 r0, 8
    and64 r0, r1
    add64 r0, r2
    lddw r1, 0x1000100010001
    mul64 r0, r1
    rsh64 r0, 48
    add64 r0, r4
lbb_1989:
    exit

:
    mov64 r4, 39
    mov64 r5, 10000
    jgt r5, r1, lbb_2025
    mov64 r4, 0
lbb_1994:
    mov64 r5, r1
    div64 r1, 10000
    mov64 r6, r1
    mul64 r6, 10000
    mov64 r0, r5
    sub64 r0, r6
    mov64 r6, r0
    and64 r6, 65535
    div64 r6, 100
    mov64 r7, r6
    mul64 r7, 100
    sub64 r0, r7
    mov64 r7, r10
    add64 r7, -39
    add64 r7, r4
    lsh64 r6, 1
    lddw r8, 0x100004542 --> b"00010203040506070809101112131415161718192021222324"
    add64 r8, r6
    ldxh r6, [r8+0x0]
    stxh [r7+0x23], r6
    lsh64 r0, 1
    and64 r0, 65534
    lddw r6, 0x100004542 --> b"00010203040506070809101112131415161718192021222324"
    add64 r6, r0
    ldxh r0, [r6+0x0]
    stxh [r7+0x25], r0
    add64 r4, -4
    jgt r5, 99999999, lbb_1994
    add64 r4, 39
lbb_2025:
    jgt r1, 99, lbb_2027
    ja lbb_2045
lbb_2027:
    mov64 r5, r1
    and64 r5, 65535
    div64 r5, 100
    mov64 r0, r5
    mul64 r0, 100
    sub64 r1, r0
    lsh64 r1, 1
    and64 r1, 65534
    lddw r0, 0x100004542 --> b"00010203040506070809101112131415161718192021222324"
    add64 r0, r1
    add64 r4, -2
    mov64 r1, r10
    add64 r1, -39
    add64 r1, r4
    ldxh r0, [r0+0x0]
    stxh [r1+0x0], r0
    mov64 r1, r5
lbb_2045:
    mov64 r5, 10
    jgt r5, r1, lbb_2058
    lsh64 r1, 1
    lddw r5, 0x100004542 --> b"00010203040506070809101112131415161718192021222324"
    add64 r5, r1
    add64 r4, -2
    mov64 r1, r10
    add64 r1, -39
    add64 r1, r4
    ldxh r5, [r5+0x0]
    stxh [r1+0x0], r5
    ja lbb_2064
lbb_2058:
    add64 r4, -1
    mov64 r5, r10
    add64 r5, -39
    add64 r5, r4
    add64 r1, 48
    stxb [r5+0x0], r1
lbb_2064:
    mov64 r1, r10
    add64 r1, -39
    add64 r1, r4
    stxdw [r10-0x1000], r1
    mov64 r1, 39
    sub64 r1, r4
    stxdw [r10-0xff8], r1
    mov64 r5, r10
    mov64 r1, r3
    lddw r3, 0x1000044d8 --> b"invalid argslibrary/core/src/fmt/mod.rsindex out o"
    mov64 r4, 0
    call 
    exit

function_2078:
    mov64 r3, r2
    ldxw r1, [r1+0x0]
    mov64 r2, 1
    call 
    exit

function_2083:
    mov64 r3, r2
    ldxdw r1, [r1+0x0]
    mov64 r2, 1
    call 
    exit

function_2088:
    ldxdw r3, [r1+0x0]
    ldxdw r1, [r1+0x8]
    ldxdw r4, [r1+0x18]
    mov64 r1, r3
    callx r4
    exit

function_2094:
    mov64 r4, r2
    ldxdw r3, [r1+0x8]
    ldxdw r2, [r1+0x0]
    mov64 r1, r4
    call 
    exit

:
    mov64 r6, r1
    mov64 r4, r3
    rsh64 r4, 3
    mov64 r1, r4
    mul64 r1, -7
    add64 r1, r3
    jgt r1, 15, lbb_2131
    mov64 r1, 0
    mov64 r5, 8
    jgt r5, r3, lbb_2120
    mov64 r5, 0
lbb_2111:
    mov64 r0, r6
    add64 r0, r1
    mov64 r7, r2
    add64 r7, r1
    ldxdw r7, [r7+0x0]
    stxdw [r0+0x0], r7
    add64 r1, 8
    add64 r5, 1
    jgt r4, r5, lbb_2111
lbb_2120:
    jsge r1, r3, lbb_2129
lbb_2121:
    mov64 r4, r6
    add64 r4, r1
    mov64 r5, r2
    add64 r5, r1
    ldxb r5, [r5+0x0]
    stxb [r4+0x0], r5
    add64 r1, 1
    jsgt r3, r1, lbb_2121
lbb_2129:
    mov64 r0, r6
    exit
lbb_2131:
    mov64 r1, r6
    syscall [invalid]
    ja lbb_2129
